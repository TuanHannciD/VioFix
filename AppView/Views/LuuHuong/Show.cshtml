@model AppView.PhanTrang.PhanTrangLuuHuong

@{
    Layout = "~/Views/Shared/_LayoutForAdmin.cshtml";
    ViewData["Title"] = "Show";
    int stt = 1;
    string searchData = "";
}

<h1>
    <b>Danh sách độ lưu hương </b>
</h1>

<div class="row" style="margin: 5px;">
    <div class="col-7">
        <a class="btn btn-primary" onclick="openCreateModal()">Thêm mới</a>
    </div>
    <div class="col-5">
        <form id="searchForm" asp-action="SearchTheoTen" asp-controller="LuuHuong" method="get" enctype="multipart/form-data" style="margin-left: 30px; text-align: end;">
            <input class="tk1" type="text" name="Ten" placeholder="Tìm kiếm theo tên" autocomplete="off" />
            <input class="btn btn-primary" type="submit" value="Tìm kiếm" style="margin-bottom: 3px; text-align: end;" />
        </form>
    </div>
</div>

<div id="searchErrorMessage" class="alert alert-warning" role="alert" style="display: none; margin-top: 10px; margin-left: 11px;">
    Vui lòng nhập tên để tìm kiếm.
</div>

<table class="table" style="margin-left: 20px;">
    <thead style="background-color: darkslategray;">
        <tr>
            <th style="color: white;">STT</th>
            <th style="color: white;">Độ lưu hương</th>
            <th style="color: white;">Trạng thái</th>
            <th style="color: white;"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.listNv)
        {
            <tr>
                <td>@stt</td>
                <td>@Html.DisplayFor(modelItem => item.Ten)</td>
                <td>
                    @if (item.TrangThai == 0)
                    {
                        <div style="color:red;">Không hoạt động</div>
                    }
                    else
                    {
                        <div style="color:black;">Hoạt động</div>
                    }
                </td>
                <td style="text-align:end;">
                    <button class="btn btn-warning" onclick="openEditModal('@item.ID')">Sửa</button>
                    <button class="btn btn-danger" onclick="return confirm('Bạn có muốn đổi trạng thái độ lưu hương @item.Ten không?');">
                        @Html.ActionLink("Đổi", "Sua", new { id = item.ID }, new { @style = "color:white;" })
                    </button>
                </td>
            </tr>
            
        }
    </tbody>
</table>

<div style="display: flex; justify-content: center;">
    <button disabled="@(Model.PagingInfo.CurrentPage == 1)" style="border: 1px solid rgba(0, 0, 0, 0.2);">
        <a href="@Url.Action("Show", new { ProductPage = 1 })" style="text-decoration: none; color: black;">Đầu</a>
    </button>
    @if (Model.PagingInfo.CurrentPage > 1)
    {
        <button style="border: 1px solid rgba(0, 0, 0, 0.2);">
            <a href="@Url.Action("Show", new { ProductPage = Model.PagingInfo.CurrentPage - 1 })" style="text-decoration: none; color: black;">Trước</a>
        </button>
    }
    @for (int i = Math.Max(1, Model.PagingInfo.CurrentPage - 1); i <= Math.Min(Model.PagingInfo.TotalPages, Model.PagingInfo.CurrentPage + 1); i++)
    {
        <button style="background-color: @(i == Model.PagingInfo.CurrentPage ? "#99CCFF" : "transparent"); border: 1px solid rgba(0, 0, 0, 0.2);">
            <a href="@Url.Action("Show", new { ProductPage = i })" style="text-decoration: none; color: black;">@i</a>
        </button>
    }
    @if (Model.PagingInfo.CurrentPage < Model.PagingInfo.TotalPages)
    {
        <button style="border: 1px solid rgba(0, 0, 0, 0.2);">
            <a href="@Url.Action("Show", new { ProductPage = Model.PagingInfo.CurrentPage + 1 })" style="text-decoration: none; color: black;">Tiếp</a>
        </button>
    }
    <button disabled="@(Model.PagingInfo.CurrentPage == Model.PagingInfo.TotalPages)" style="border: 1px solid rgba(0, 0, 0, 0.2);">
        <a href="@Url.Action("Show", new { ProductPage = Model.PagingInfo.TotalPages })" style="text-decoration: none; color: black;">Cuối</a>
    </button>
</div>

<script>
    document.getElementById('searchForm').addEventListener('submit', function (event) {
        var searchInput = document.querySelector('.tk1');
        if (!searchInput.value.trim()) {
            event.preventDefault();
            document.getElementById('searchErrorMessage').style.display = 'block';
        } else {
            sessionStorage.setItem('searchData', searchInput.value);
            document.getElementById('searchErrorMessage').style.display = 'none';
        }
    });
        // Ngừng sự kiện backspace để không quay lại trang trước
    $(document).on('keydown', function(e) {
        if (e.key === 'Backspace') {
            e.preventDefault();
        }
    });


    window.addEventListener('load', function () {
        var searchInput = document.querySelector('.tk1');
        searchData = sessionStorage.getItem('searchData');
        if (searchData) {
            searchInput.value = searchData;
        }
    });

    document.addEventListener('keydown', function (event) {
        if (event.key === 'Backspace') {
            sessionStorage.removeItem('searchData');
            window.location.href = '/LuuHuong/Show';
        }
    });

    function openCreateModal() {
        $.get('/LuuHuong/CreateModal', function (data) {
            $('#modalContainer').html(data);
            $('#modalContainer').modal('show');
        });
    }

    function openEditModal(id) {
        // Sử dụng query string để xây dựng URL
        $.get('/LuuHuong/EditModal?id=' + id, function (data) {
            // Chèn nội dung modal vào trong phần tử #modalContainer
            $('#modalContainer').html(data);

            // Hiển thị modal
            $('#modalContainer').modal('show');
        }).fail(function() {
            alert("Có lỗi xảy ra khi tải modal!");
        });
    }

</script>

<div id="modalContainer" class="modal fade" tabindex="-1" role="dialog"></div>
